on: [push, pull_request]
name: Build package
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Fetch tags
      run: git fetch origin +refs/tags/*:refs/tags/*

    - name: Set VERSION
      if: startsWith(github.event.ref, 'refs/tags/v')
      run: echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build package
      run: |
        sudo apt-get update -y && sudo apt-get install debhelper devscripts curl
        ./build.sh

    - name: Set package name
      id: get_package_name
      run: echo ::set-output name=pkgname::$(ls -1 kip-cell_*.deb)

    - name: Validate template
      uses: operatehappy/packer-github-actions@v0.2.0
      with:
        command: validate
        arguments: -syntax-only
        target: packer.json

    - name: Save GCP account.json
      run: echo "${{ secrets.GCP_ACCOUNT_JSON }}" > account.json

    - name: Build image
      if: startsWith(github.event.ref, 'refs/tags/v')
      uses: operatehappy/packer-github-actions@v0.2.0
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        command: build
        arguments: -var package=${{ steps.get_package_name.outputs.pkgname }}
        target: packer.json

    - name: Create release
      if: startsWith(github.event.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      if: startsWith(github.event.ref, 'refs/tags/v')
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get_package_name.outputs.pkgname }}
        asset_name: ${{ steps.get_package_name.outputs.pkgname }}
        asset_content_type: application/octet-stream
